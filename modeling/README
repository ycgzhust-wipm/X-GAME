Preparation Before Running the Program
1) Ensure that XPLOR-NIH (version: 2.5x) is properly installed and functioning.  
2) The protein conformation should be complete and continuous. If there are missing parts, structural modeling software can be used to fill in the gaps.  

Steps to Run the Program
  
Step 1: Run `prepare-restraints.sh`
This step converts the cross-linking site amino acid information into a format that the program can recognize. Make sure to prepare a file containing the cross-linking site information (e.g., `xlms.txt`).  

The xlms.txt file defines the information for the cross-linking sites. The file contains two columns of numbers, where the first column represents the cross-linking sites on protein A, and the corresponding second column represents the cross-linking sites on protein B. For example:

 8 48
 72 6
 92 6

The three numbers, 14.0, 10.0, and 8.0, define the shape of the constraint function, with the last number typically being the one that needs modification. 
The sum of the first and last numbers corresponds to the maximum arm length of the cross-linker. 
In this example, the maximum arm length of the cross-linker (the distance between the CA atoms) is defined as 22 angstroms.


Step 2: Run `prepare-structure.sh`
This step generates the PDB and PSF files that the program can recognize based on the original protein PDB file. This includes two main substeps:  
Step 2.1: Generate the PSF file from the PDB file.  
Step 2.2: Add hydrogen atoms to the protein structure and perform initial optimization. If the original PDB file already contains hydrogen atoms, but there are mismatches in hydrogen atom naming, remove all hydrogen atoms first and then add them uniformly during this step.  

When running this `.sh` file, make sure to modify the following parameters:  
`xplorhome`: Specifies the directory containing the protein parameters.  
`pdbname`: Specifies the name of the protein's PDB file (without the file extension).  

Step 3: Run `refine-rigidbody.sh` or `refine-flexible.sh`
For proteins containing only a single domain, or for multi-domain proteins, run `refine-rigidbody.sh` or `refine-flexible.sh`, respectively.  

When running this `.sh` file, make sure to modify the following parameters:  
`xplorhome`: Specifies the directory containing the protein parameters.  
`proteinA/proteinB`: Specifies the names of the protein PDB files (without the file extension).  
`domain1/domain2`: Defines the amino acid regions corresponding to the start and end of each domain.  
`loop1:`: Defines the flexible region's position.  

Step 4: Run `xplor -py xlms-refine-rigidbody.py` or `xplor -py xlms-refine-loop.py`
Choose the appropriate Python script based on the refinement method you are using.  

The "example" folder contains relevant example files


